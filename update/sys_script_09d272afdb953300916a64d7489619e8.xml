<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_354306_job_appli_job_openings</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message><![CDATA[<p>The Due Date you are trying to enter must be later then the given Post Date</p>]]></message>
        <name>No Due date before Start date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

//	rightnow stores the current time
	var rightnow = new GlideDateTime();
//gs.addInfoMessage(JSON.stringify(rightnow));
	// Create a GlideDateTime object for the Job Post Date
	var postDate = new GlideDateTime(current.job_post_date);
	var dueDate = new GlideDateTime(current.job_due_date);
	
// 	If the Job Post Date date is before rightnow, do not write the record to the database
// 	Output an error message to the screen
	if(postDate.before(rightnow)){
		gs.addErrorMessage("Job Post Date cannot be in the past.  Your request has not been saved to the database.");
		current.setAbortAction(true);
	}
	if(dueDate.before(postDate)){
		gs.addErrorMessage("Job Due Date cannot be earlier then the Job Post Date.  Your request has not been saved to the database.");
		current.setAbortAction(true);
	}
	
// 	var start = (new GlideDateTime(current.getValue('job_post_date'))).getNumericValue();
// 	var end = (new GlideDateTime(current.getValue('job_due_date'))).getNumericValue();
// 	if (start > end) {
// 		gs.addInfoMessage('start must be before end');
// 		current.job_post_date.setError('start must be before end') ;
// 		current.setAbortAction(true);
// 	} 
	


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-15 04:17:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>09d272afdb953300916a64d7489619e8</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>No Due date before Start date</sys_name>
        <sys_overrides/>
        <sys_package display_value="Job_application" source="x_354306_job_appli">e5db2a32dbd97300916a64d7489619dc</sys_package>
        <sys_policy/>
        <sys_scope display_value="Job_application">e5db2a32dbd97300916a64d7489619dc</sys_scope>
        <sys_update_name>sys_script_09d272afdb953300916a64d7489619e8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-21 19:11:32</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=09d272afdb953300916a64d7489619e8"/>
</record_update>
